
Set environment with:

module unload PrgEnv-cray
module load PrgEnv-gnu
module load cmake
module load git

Boost_1.55.0:

Configure and build with the following script:

cat << EOF > ~/user-config.jam
using mpi : : <find-shared-library>mpich ; using gcc : : : <compileflags>-I${MPICH_DIR}/include <linkflags>-L${MPICH_DIR}/lib ;
EOF
sh ./bootstrap.sh \
    --prefix=$HOME/software/boost_1_55_0 \
    --without-icu \
    --with-toolset=gcc \
    --without-libraries=python
./b2 -a -d+2 link=static stage
./b2 -a -d+2 link=static install
rm -f ~/user-config.jam

PETSc-3.6.0:

Configure PETSc with

export CRAYPE_LINK_TYPE=dynamic
export CRAYPE_ADD_RPATH=yes

python ./config/configure.py \
   PETSC_ARCH=gnu-cxx-complex-test-opt \
   --with-prefix=./ \
   --with-mpi=1 \
   --with-batch \
   --known-mpi-shared-libraries \
   --with-cc=cc \
   --with-fc=ftn \
   --with-cxx=CC \
   --with-c++-support=1 \
   --with-c-support=0 \
   --with-c-language=C++\
   --with-fortran=0 \
   --with-scalar-type=complex \
   --with-fortran-kernels=generic \
   --download-superlu_dist \
   --download-superlu \
   --download-parmetis \
   --download-metis \
   --download-f2cblaslapack=1 \
   --with-clanguage=c++ \
   --with-shared-libraries=1 \
   --with-x=0 \
   --with-pic=1\
   --with-mpirun=aprun \
   --with-mpiexec=aprun \
   --with-debugging=0

Running this script generates the file conftest-gnu-cxx-complex-shared-opt. Run
this on 1 node to generate the file reconfigure-gnu-cxx-complex-shared-opt.py. Run
the python script in the PETSc directory to finish building PETSc.  It doesn't
appear necessary to edit the petscconf.h file any more.

GA-5-4:

Configure ga-5-4 with the following:

./configure \
   --enable-cxx \
   --disable-f77 \
   --with-mpi-pr \
   --enable-autodetect \
   --with-blas \
   --with-lapack \
   --with-scalapack \
   --enable-i4 \
   --enable-shared=yes \
   --prefix=/mnt/a/u/sciteam/palmer1/software/ga-5-4 \
   --with-pic

(specifying the BLAS libraries explicitly runs into issues with the GridPACK
CMake configuration). After configuring, type "make; make install"

GridPACK:

Configure GridPACK with the following script:

rm -rf CMake*

export CRAYPE_LINK_TYPE=dynamic
export LIBRARY_PATH="$ATP_HOME/libApp/"

cmake -Wdev \
       -D BOOST_ROOT:STRING='/u/sciteam/palmer1/software/boost_1_55_0' \
       -D GA_DIR:STRING='/u/sciteam/palmer1/software/ga-5-4' \
       -D CMAKE_INSTALL_PREFIX:PATH='/u/sciteam/palmer1/gridpack/src/build/install' \
       -D PETSC_DIR:STRING='/u/sciteam/palmer1/software/petsc-3.6.0' \
       -D PETSC_ARCH:STRING='gnu-cxx-complex-shared-opt' \
       -D PARMETIS_DIR:STRING= \
         '/u/sciteam/palmer1/software/petsc-3.6.0/gnu-cxx-complex-shared-opt/lib' \
       -D MPI_CXX_COMPILER:STRING='CC' \
       -D MPI_C_COMPILER:STRING='cc' \
       -D MPIEXEC:STRING='aprun' \
       -D CHECK_COMPILATION_ONLY:BOOL=true \
       -D USE_PROGRESS_RANKS:BOOL=true \
       -D CMAKE_BUILD_TYPE:STRING='RELWITHDEBINFO' \
       -D CMAKE_VERBOSE_MAKEFILE:STRING=TRUE \
       ..

This ran all tests and finished configuring without problems. Not sure what got
changed so that it works, but I'm not complaining. If you are using the progress
ranks build of GA (which is what I built GA with), make sure you include the

-D USE_PROGRESS_RANKS:BOOL=TRUE

directive.

I ran into some compilation issues with missing std::map declarations and checked
in some fixes. I also verified that the powerflow.x application runs.

Bruce
